---
title: "Arctic Boreal Basemap Grids"
author: "Heidi Rodenhizer"
format: html
editor: visual
---

# Load Packages

```{r}
library(sf)
library(viridis)
library(tidyverse)
```

# Load Data

```{r}
planet_grids = st_read("./data/circumpolar_basemap_grids_2024.geojson")
ab_region = st_read("../../tundra_and_boreal_domain/tundra_and_boreal.shp") |>
  st_make_valid()
```

# Filter Planet Grids to Arctic Boreal Region

```{r}
ab_planet_grids = planet_grids |>
  mutate(
    year = name |>
      str_match("[:digit:]{4}") |>
      as.integer(),
    grid_column = id |>
      str_split_i("-", 1) |>
      as.integer(),
    grid_row = id |>
      str_split_i("-", 2) |>
      as.integer(),
    basemap_name = paste0(
      "global_quarterly_",
      year,
      "q3_mosaic"
    ),
    delivery_location = paste0(
      "global_quarterly/",
      year,
      "/",
      grid_column,
      "/",
      grid_row,
      "/"
    )
  ) |>
  st_filter(
    ab_region
  ) |>
  select(
    year, 
    id, 
    grid_column, 
    grid_row, 
    basemap_name, 
    delivery_location, 
    link
    ) |>
  arrange(year, grid_column, grid_row)
```

```{r}
ggplot() +
  geom_sf(
    data = ab_planet_grids,
    aes(color = grid_column),
    fill = "transparent"
  ) +
  scale_color_viridis() +
  theme(legend.position = "none")
```

```{r}
ab_planet_grids |>
  st_drop_geometry() |>
  summarise(
    count = n(),
    .by = "grid_column"
  ) |>
  summarise(
    min = min(count),
    median = median(count),
    max = max(count)
  )
```

```{r}
# st_write(
#   ab_planet_grids,
#   "./data/arctic_boreal_planet_basemap_grids_2024.geojson"
# )
```

# Remove Previously Downloaded Year/Grid Combinations

```{r}
downloads = read_csv("../ARTS_planet_basemaps/data/download/planet_basemap_downloads.csv") |>
  bind_rows(
    read_csv("../ARTS_planet_basemaps/data/download_20250715/planet_basemap_downloads.csv")
  )
```

```{r}
downloaded_grids = downloads |>
  filter(str_detect(filename, "quad")) |>
  mutate(file = str_split_i(filename, "/", 6),
         year = file |>
           str_split_i("_", 3) |>
           str_sub(1, 4) |>
           as.numeric(),
         id = str_split_i(file, "_", 5),
         .before = "order_name") |>
  select(year, id) |>
  distinct()
```

```{r}
filtered_grids = ab_planet_grids |>
  anti_join(downloaded_grids, by = c("year", "id"))

if (nrow(ab_planet_grids) != nrow(filtered_grids)) {
  st_write(
    filtered_grids,
    "./data/arctic_boreal_planet_basemap_grids_2024_filtered.geojson"
  )
}
```

# 